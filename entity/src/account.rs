//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "account")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub sequence: String,
    pub username: String,
    pub tuta_mail: String,
    pub password: String,
    pub nickname: String,
    pub sex: bool,
    pub country: String,
    pub favorites_icon: Option<String>,
    pub permission: i32,
    pub created_at: String,
    pub updated_at: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::permission::Entity",
        from = "Column::Permission",
        to = "super::permission::Column::Level",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Permission,
}

impl Related<super::permission::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Permission.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
